openapi: 3.0.0
info:
  title: SECOND HAND
  version: 1.0.0
servers:
  - url: https://dev-second-hand.herokuapp.com
  - url: https://api-second-hand.herokuapp.com
  - url: http://localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Auth
  - name: Notification
  - name: City
  - name: Biodata
  - name: Category
  - name: Product
  - name: Wishlist
  - name: Transaction
paths:
  /api/v1/login:
    post:
      tags:
        - Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: ariardiansyah101@gmail.com
                password: rahasia
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/register:
    post:
      tags:
        - Auth
      summary: Register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Ari A
                email: aritest@gmail.com
                password: rahasia
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/forgot_password:
    post:
      tags:
        - Auth
      summary: Forgot Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: ariardiansyah101@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/verify_otp:
    post:
      tags:
        - Auth
      summary: Verify OTP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: ariardiansyah101@gmail.com
                otp: '054334'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/change_password:
    post:
      tags:
        - Auth
      summary: Change Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                uid: dc66d475-bd57-4812-aaa6-e3a15c3997ea
                password: haha123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/notification:
    get:
      tags:
        - Notification
      summary: Get All
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Notification
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: '2'
                title: wkwk
                subtitle: test
                message: Ini notifikasi wkwkw
                path: /product/1
                image: nama_gambar.png
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/notification/{id}:
    get:
      tags:
        - Notification
      summary: Find By ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Notification
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: '1'
                title: test ubah
                subtitle: wkwkw
                message: test ubah
                path: test ubah
                image: test_ubah.png
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Notification
      summary: Delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/notification/mark_as_read/{id}:
    get:
      tags:
        - Notification
      summary: Mark As Read
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/city:
    get:
      tags:
        - City
      summary: Get All
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - City
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                city: Bandung
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/city/{id}:
    get:
      tags:
        - City
      summary: Find By ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - City
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                city: Bandung2
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - City
      summary: Delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/biodata/{user_id}:
    get:
      tags:
        - Biodata
      summary: Get By User ID
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Biodata
      summary: Update By User ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                fullname: Test Ubah
                profile_picture: uploads/profile/profile_picture-1655819034209-247114696.jpg
                city_id: 1
                address: test
                number_phone: '0838266'
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/biodata/upload-profile-pic:
    post:
      tags:
        - Biodata
      summary: Upload Profile Pic
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profile_picture:
                  type: string
                  format: binary
                uid:
                  type: string
                  example: 1d0e014c-a7bb-4631-98c0-501a121356a1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/category:
    get:
      tags:
        - Category
      summary: Get All
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Category
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                category: Hobi
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/category/{id}:
    get:
      tags:
        - Category
      summary: Find By ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Category
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                category: Elektronik
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Category
      summary: Delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '7'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/product:
    get:
      tags:
        - Product
      summary: Get All
      security:
        - bearerAuth: []
      parameters:
        - name: category
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Product
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product: Test Barang
                price: '5000'
                category_id: '1'
                description: ini product 6
                status: 1
                pictures:
                  - uploads/product/pictures-1655900295570-610286145.jpg
                  - uploads/product/pictures-1655900295585-840343761.jpg
                  - uploads/product/pictures-1655900295589-869210671.jpg
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/product/public:
    get:
      tags:
        - Product
      summary: Get All Public
      parameters:
        - name: product
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: order
          in: query
          schema:
            type: string
          example: id:DESC
        - name: category
          in: query
          schema:
            type: string
          example: 3,4
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/product/{id}:
    get:
      tags:
        - Product
      summary: Find By ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - Product
      summary: Update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product: Test Barang Ubah
                price: '5000'
                category_id: '1'
                description: ini product ubah
                status: 1
                pictures:
                  - uploads/product/pictures-1655900295570-610286145.jpg
                  - uploads/product/pictures-1655900555616-390879801.jpg
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Product
      summary: Delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '6'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/product/upload-pics/:
    post:
      tags:
        - Product
      summary: Upload Picture
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                pictures:
                  type: string
                  format: binary
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/product/delete-pics/{id}:
    delete:
      tags:
        - Product
      summary: Delete Picture
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '12'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/wishlist:
    get:
      tags:
        - Wishlist
      summary: Get All
      security:
        - bearerAuth: []
      parameters:
        - name: product_id
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
        - name: order
          in: query
          schema:
            type: string
          example: id:ASC
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Wishlist
      summary: Create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_id: 12
                user_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/wishlist/{id}:
    get:
      tags:
        - Wishlist
      summary: Find By ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Wishlist
      summary: Delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/transaction:
    get:
      tags:
        - Transaction
      summary: Get All
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/transaction/{id}:
    get:
      tags:
        - Transaction
      summary: Find By ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Transaction
      summary: Delete
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/transaction/buyer/bid:
    post:
      tags:
        - Transaction
      summary: Buyer Bid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                product_id: '5'
                bid_price: '500'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/transaction/seller/change_status/bid/{id}:
    put:
      tags:
        - Transaction
      summary: Seller Change Status Bid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                bid_status: '2'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/transaction/seller/change_status/{id}:
    put:
      tags:
        - Transaction
      summary: Seller Change Status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                transaction_status: '1'
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
